{"ast":null,"code":"import _classCallCheck from \"U:\\\\ANDY PUJOL\\\\NUIWebReact\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"U:\\\\ANDY PUJOL\\\\NUIWebReact\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"U:\\\\ANDY PUJOL\\\\NUIWebReact\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"U:\\\\ANDY PUJOL\\\\NUIWebReact\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"U:\\\\ANDY PUJOL\\\\NUIWebReact\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"U:\\\\ANDY PUJOL\\\\NUIWebReact\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"U:\\\\ANDY PUJOL\\\\NUIWebReact\\\\client\\\\src\\\\Forms\\\\register.js\";\nimport React, { Component } from 'react';\nimport './login.css';\nimport { AvForm, AvGroup, AvInput, AvFeedback } from 'availity-reactstrap-validation';\nimport { Container, Row, Col, Button, Label, Jumbotron, Modal, ModalBody, ModalHeader, ModalFooter, FormText } from 'reactstrap';\nimport FontAwesomeIcon from '@fortawesome/react-fontawesome';\nimport { faEye, faEyeSlash } from '@fortawesome/fontawesome-free-solid';\nimport axios from 'axios';\n\nvar RegisterAdmin =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RegisterAdmin, _Component);\n\n  function RegisterAdmin(props) {\n    var _this;\n\n    _classCallCheck(this, RegisterAdmin);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RegisterAdmin).call(this, props));\n\n    _this.usernameChange = function (event) {\n      event.persist();\n\n      _this.setState({\n        username: event.target.value\n      });\n    };\n\n    _this.passwordChange = function (event) {\n      event.persist();\n\n      _this.setState({\n        password: event.target.value\n      });\n    };\n\n    _this.confirmChange = function (event) {\n      event.persist();\n\n      _this.setState({\n        confirm: event.target.value\n      });\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n      document.getElementById('LoginFormEmail').value = null;\n      document.getElementById('LoginFormPassword').value = null;\n\n      if (_this.state.password === _this.state.confirm) {\n        _this.setState({\n          passwordsMatch: true\n        });\n      }\n\n      if (_this.state.passwordsMatch) {\n        axios.post(\"api/register\", {\n          username: _this.state.username,\n          password: _this.state.password\n        }).then(function (res) {\n          if (res.data.loginSuccess === true) {\n            console.log(\"Success!\");\n\n            _this.props.history.push('/');\n\n            window.location.reload();\n          } else {\n            _this.render(React.createElement(Modal, {\n              isOpen: _this.state.modal,\n              toggle: _this.toggle,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 77\n              },\n              __self: this\n            }, React.createElement(ModalHeader, {\n              toggle: _this.toggle,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 78\n              },\n              __self: this\n            }, \"Login Attempt Falied\"), React.createElement(ModalBody, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 79\n              },\n              __self: this\n            }, \"Your Username or Password are Incorrect. Please try Again!\"), React.createElement(ModalFooter, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 82\n              },\n              __self: this\n            }, React.createElement(Button, {\n              color: \"primary\",\n              onClick: _this.toggle,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 83\n              },\n              __self: this\n            }, \"Close\"))));\n\n            console.log(res);\n            console.log(res.data);\n          }\n        });\n      } else {}\n    };\n\n    _this.state = {\n      passwordVisible: false,\n      confirmVisible: false,\n      passwordsMatch: false,\n      username: \"\",\n      password: \"\",\n      confirm: \"\",\n      modal: false\n    };\n    _this.toggleVisiblePassword = _this.toggleVisiblePassword.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(RegisterAdmin, [{\n    key: \"toggleVisiblePassword\",\n    value: function toggleVisiblePassword() {\n      this.setState({\n        passwordVisible: !this.state.passwordVisible\n      });\n    }\n  }, {\n    key: \"toggleVisibleConfirm\",\n    value: function toggleVisibleConfirm() {\n      this.setState({\n        confirmVisible: !this.state.confirmVisible\n      });\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      this.setState({\n        modal: !this.state.modal\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var iconPassword = this.state.passwordVisible ? faEyeSlash : faEye;\n      var iconConfirm = this.state.confirmVisible ? faEyeSlash : faEye;\n      var input_type_Password = this.state.passwordVisible ? \"text\" : \"password\";\n      var input_type_Confirm = this.state.confirmVisible ? \"text\" : \"password\";\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      })), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: {\n          size: 6,\n          offset: 3\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Register Admin\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Note:\"), React.createElement(\"p\", {\n        className: \"login-note\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"THIS PAGE IS FOR REGISTERING ADMINISTRATORS THAT WILL HAVE ACCESS TO ADDING NEW MEMBERS AMONG OTHER PRIVILEGES. IF YOU DO NOT WANT TO GIVE ACCESS PLEASE CLICK AWAY NOW!\")), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(AvForm, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(AvGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"form-label\",\n        for: \"Email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Admin Email\"), React.createElement(AvInput, {\n        type: \"email\",\n        name: \"email\",\n        id: \"LoginFormEmail\",\n        placeholder: \"Type your Email Here\",\n        onChange: this.usernameChange,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), React.createElement(AvFeedback, {\n        className: \"av-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"This Field is Required!\")))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(AvGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"form-label\",\n        for: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"Admin Password\"), React.createElement(AvInput, {\n        type: input_type_Password,\n        name: \"password\",\n        id: \"LoginFormPassword\",\n        placeholder: \"Type your Password Here\",\n        onChange: this.passwordChange,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }), React.createElement(AvFeedback, {\n        className: \"av-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"This Field is Required!\"))), React.createElement(Col, {\n        md: {\n          offset: -2\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }), React.createElement(Button, {\n        outline: true,\n        onClick: this.toggleVisiblePassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        icon: iconPassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      })))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(AvGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"form-label\",\n        for: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Confirm Password\"), React.createElement(AvInput, {\n        type: input_type_Confirm,\n        name: \"password\",\n        id: \"LoginFormConfirm\",\n        placeholder: \"Confirm Password\",\n        onChange: this.confirmChange,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }), React.createElement(AvFeedback, {\n        className: \"av-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"This Field is Required!\"))), React.createElement(Col, {\n        md: {\n          offset: -2\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }), React.createElement(Button, {\n        outline: true,\n        onClick: this.to,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        icon: iconConfirm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      })))), React.createElement(Button, {\n        outline: true,\n        color: \"info\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Log In\"))))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return RegisterAdmin;\n}(Component);\n\nexport default RegisterAdmin;","map":{"version":3,"sources":["U:\\ANDY PUJOL\\NUIWebReact\\client\\src\\Forms\\register.js"],"names":["React","Component","AvForm","AvGroup","AvInput","AvFeedback","Container","Row","Col","Button","Label","Jumbotron","Modal","ModalBody","ModalHeader","ModalFooter","FormText","FontAwesomeIcon","faEye","faEyeSlash","axios","RegisterAdmin","props","usernameChange","event","persist","setState","username","target","value","passwordChange","password","confirmChange","confirm","handleSubmit","preventDefault","document","getElementById","state","passwordsMatch","post","then","res","data","loginSuccess","console","log","history","push","window","location","reload","render","modal","toggle","passwordVisible","confirmVisible","toggleVisiblePassword","bind","iconPassword","iconConfirm","input_type_Password","input_type_Confirm","size","offset","to"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './login.css';\r\nimport { AvForm, AvGroup, AvInput, AvFeedback } from 'availity-reactstrap-validation';\r\nimport { Container, Row, Col, Button, Label, Jumbotron, Modal, ModalBody, ModalHeader, ModalFooter, FormText } from 'reactstrap';\r\nimport FontAwesomeIcon from '@fortawesome/react-fontawesome'\r\nimport { faEye, faEyeSlash} from '@fortawesome/fontawesome-free-solid';\r\nimport axios from 'axios';\r\n\r\nclass RegisterAdmin extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            passwordVisible: false,\r\n            confirmVisible: false,\r\n            passwordsMatch: false,\r\n            username: \"\",\r\n            password: \"\",\r\n            confirm: \"\",\r\n            modal: false\r\n        }\r\n        this.toggleVisiblePassword = this.toggleVisiblePassword.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n      }\r\n\r\n    toggleVisiblePassword(){\r\n            this.setState({ passwordVisible: !this.state.passwordVisible});\r\n    }\r\n\r\n    toggleVisibleConfirm(){\r\n        this.setState({ confirmVisible: !this.state.confirmVisible});\r\n  }\r\n\r\n    usernameChange = event =>{\r\n        event.persist();\r\n        this.setState({ username: event.target.value });\r\n    }\r\n\r\n    passwordChange = event =>{\r\n        event.persist();\r\n        this.setState({ password: event.target.value });\r\n    }\r\n\r\n    confirmChange = event =>{\r\n        event.persist();\r\n        this.setState({ confirm: event.target.value });\r\n    }\r\n    \r\n    toggle(){\r\n        this.setState({ modal: !this.state.modal });\r\n    }\r\n\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        document.getElementById('LoginFormEmail').value = null;\r\n        document.getElementById('LoginFormPassword').value = null;\r\n\r\n        if(this.state.password === this.state.confirm){\r\n            this.setState({ passwordsMatch: true });\r\n        }\r\n\r\n        if(this.state.passwordsMatch){\r\n            axios.post(`api/register`, { \r\n                username: this.state.username,\r\n                password: this.state.password\r\n            })\r\n            .then(res => {\r\n                if(res.data.loginSuccess === true){\r\n                    console.log(\"Success!\")\r\n                    this.props.history.push('/');\r\n                    window.location.reload();\r\n                }\r\n                else{\r\n                    this.render(\r\n                        <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n                            <ModalHeader toggle={this.toggle}>Login Attempt Falied</ModalHeader>\r\n                            <ModalBody>\r\n                                Your Username or Password are Incorrect. Please try Again!\r\n                            </ModalBody>\r\n                            <ModalFooter>\r\n                                <Button color=\"primary\" onClick={this.toggle}>Close</Button>\r\n                            </ModalFooter>\r\n                        </Modal>\r\n                    )\r\n                    console.log(res);\r\n                    console.log(res.data);\r\n                }\r\n            })\r\n        }\r\n        else{\r\n\r\n        }\r\n      }\r\n\r\n    render() {\r\n        let iconPassword = this.state.passwordVisible ? faEyeSlash : faEye;\r\n        let iconConfirm = this.state.confirmVisible ? faEyeSlash : faEye;\r\n        let input_type_Password = this.state.passwordVisible ? \"text\" : \"password\";\r\n        let input_type_Confirm = this.state.confirmVisible ? \"text\" : \"password\";\r\n        return (\r\n            <div>\r\n                <Container>\r\n                    <Row><br /><br /></Row>\r\n                    <Row>\r\n                        <Col md={{size: 6, offset: 3}}>\r\n                            <h1>Register Admin</h1>\r\n                            <br />\r\n                        </Col>\r\n                    </Row>\r\n                     <Row>\r\n                         <Col sm=\"6\">\r\n                            <h2>Note:</h2>\r\n                            <p className=\"login-note\">THIS PAGE IS FOR REGISTERING ADMINISTRATORS THAT WILL HAVE ACCESS TO ADDING NEW MEMBERS \r\n                                                    AMONG OTHER PRIVILEGES. IF YOU DO NOT WANT TO GIVE ACCESS PLEASE CLICK AWAY NOW!\r\n                            </p>\r\n                         </Col>\r\n                         <Col>\r\n                            <Jumbotron>\r\n                                <AvForm onSubmit={this.handleSubmit}>\r\n                                    <Row>\r\n                                        <Col sm=\"10\">\r\n                                            <AvGroup>\r\n                                                <Label className=\"form-label\" for=\"Email\">Admin Email</Label>\r\n                                                <AvInput type=\"email\" name=\"email\" id=\"LoginFormEmail\" placeholder=\"Type your Email Here\" onChange={this.usernameChange} required />\r\n                                                <AvFeedback className=\"av-feedback\">This Field is Required!</AvFeedback>\r\n                                            </AvGroup>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col sm=\"10\">\r\n                                            <AvGroup>\r\n                                                <Label className=\"form-label\" for=\"Password\">Admin Password</Label>\r\n                                                <AvInput type={input_type_Password} name=\"password\" id=\"LoginFormPassword\" placeholder=\"Type your Password Here\"  onChange={this.passwordChange} required />\r\n                                                <AvFeedback className=\"av-feedback\">This Field is Required!</AvFeedback>\r\n                                            </AvGroup>\r\n                                        </Col> \r\n                                        <Col md={{offset: -2}}>\r\n                                            <br />\r\n                                            <Button outline onClick={this.toggleVisiblePassword}><FontAwesomeIcon icon={iconPassword} /></Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col sm=\"10\">\r\n                                            <AvGroup>\r\n                                                <Label className=\"form-label\" for=\"Password\">Confirm Password</Label>\r\n                                                <AvInput type={input_type_Confirm} name=\"password\" id=\"LoginFormConfirm\" placeholder=\"Confirm Password\" onChange={this.confirmChange} required />\r\n                                                <AvFeedback className=\"av-feedback\">This Field is Required!</AvFeedback>\r\n                                            </AvGroup>\r\n                                        </Col> \r\n                                        <Col md={{offset: -2}}>\r\n                                            <br />\r\n                                            <Button outline onClick={this.to}><FontAwesomeIcon icon={iconConfirm} /></Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Button outline color=\"info\" type=\"submit\">Log In</Button>\r\n                                </AvForm>\r\n                            </Jumbotron>\r\n                         </Col> \r\n                     </Row>\r\n                     <br />\r\n                     <br />\r\n                     <br />\r\n                     <br />\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default RegisterAdmin;"]},"metadata":{},"sourceType":"module"}