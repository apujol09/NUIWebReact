{"ast":null,"code":"import _classCallCheck from \"U:\\\\ANDY PUJOL\\\\NUIWebReact\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"U:\\\\ANDY PUJOL\\\\NUIWebReact\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"U:\\\\ANDY PUJOL\\\\NUIWebReact\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"U:\\\\ANDY PUJOL\\\\NUIWebReact\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"U:\\\\ANDY PUJOL\\\\NUIWebReact\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"U:\\\\ANDY PUJOL\\\\NUIWebReact\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"U:\\\\ANDY PUJOL\\\\NUIWebReact\\\\client\\\\src\\\\Forms\\\\login.js\";\nimport React, { Component } from 'react';\nimport './login.css';\nimport { AvForm, AvGroup, AvInput, AvFeedback } from 'availity-reactstrap-validation';\nimport { Container, Row, Col, Button, Label, Jumbotron, Modal, ModalBody } from 'reactstrap';\nimport FontAwesomeIcon from '@fortawesome/react-fontawesome';\nimport { faEye, faEyeSlash } from '@fortawesome/fontawesome-free-solid';\nimport axios from 'axios';\nimport Redirect from 'react-router-dom';\n\nvar LoginForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LoginForm, _Component);\n\n  function LoginForm(props) {\n    var _this;\n\n    _classCallCheck(this, LoginForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoginForm).call(this, props));\n\n    _this.usernameChange = function (event) {\n      event.persist();\n\n      _this.setState({\n        username: event.target.value\n      });\n\n      console.log(_this.state.username);\n    };\n\n    _this.passwordChange = function (event) {\n      event.persist();\n\n      _this.setState({\n        password: event.target.value\n      });\n\n      console.log(_this.state.password);\n    };\n\n    _this.handleSubmit = function (event) {\n      event.persist();\n      var admin = {\n        username: _this.state.username,\n        password: _this.state.password\n      };\n      axios.post(\"/api/login\", {\n        admin: admin\n      }).then(function (res) {\n        if (res.data.loginSuccess === true) {\n          return React.createElement(Redirect, {\n            to: \"/\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          });\n        } else {\n          return React.createElement(Modal, {\n            isOpen: _this.state.modal,\n            toggle: _this.toggle,\n            className: _this.props.className,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63\n            },\n            __self: this\n          }, React.createElement(ModalHeader, {\n            toggle: _this.toggle,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64\n            },\n            __self: this\n          }, \"Modal title\"), React.createElement(ModalBody, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65\n            },\n            __self: this\n          }, \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"), React.createElement(ModalFooter, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68\n            },\n            __self: this\n          }, React.createElement(Button, {\n            color: \"primary\",\n            onClick: _this.toggle,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            },\n            __self: this\n          }, \"Do Something\"), ' ', React.createElement(Button, {\n            color: \"secondary\",\n            onClick: _this.toggle,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70\n            },\n            __self: this\n          }, \"Cancel\")));\n        }\n      });\n    };\n\n    _this.state = {\n      passwordVisible: false,\n      username: \"\",\n      password: \"\",\n      modal: false\n    };\n    _this.toggleVisiblePassword = _this.toggleVisiblePassword.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(LoginForm, [{\n    key: \"toggleVisiblePassword\",\n    value: function toggleVisiblePassword() {\n      this.setState({\n        passwordVisible: !this.state.passwordVisible\n      });\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      this.setState({\n        modal: !this.state.modal\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var icon = this.state.passwordVisible ? faEyeSlash : faEye;\n      var input_type = this.state.passwordVisible ? \"text\" : \"password\";\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      })), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: {\n          size: 6,\n          offset: 3\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Administrator Log In\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Note:\"), React.createElement(\"p\", {\n        className: \"login-note\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"THIS PAGE IS ONLY FOR ADMINISTRATORS, IT IS NOT FOR COMMON USERS. IF YOU HAVE AN ADMINISTRATOR ACCOUNT PLEASE USE THE FORM NEXT TO THIS TEXT TO LOG IN WITH YOUR GIVEN CREDENTIALS. OTHERWISE, GO AWAY!\")), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(AvForm, {\n        onSubmit: this.validateFormAndSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(AvGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"form-label\",\n        for: \"Email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Email\"), React.createElement(AvInput, {\n        type: \"email\",\n        name: \"email\",\n        id: \"LoginFormEmail\",\n        placeholder: \"Type your Email Here\",\n        onChange: this.usernameChange,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), React.createElement(AvFeedback, {\n        className: \"av-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"This Field is Required!\")))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(AvGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(Label, {\n        className: \"form-label\",\n        for: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Password\"), React.createElement(AvInput, {\n        type: input_type,\n        name: \"password\",\n        id: \"LoginFormPassword\",\n        placeholder: \"Type your Password Here\",\n        onChange: this.passwordChange,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(AvFeedback, {\n        className: \"av-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"This Field is Required!\"))), React.createElement(Col, {\n        md: {\n          offset: -2\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), React.createElement(Button, {\n        outline: true,\n        onClick: this.toggleVisiblePassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        icon: icon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      })))), React.createElement(Button, {\n        outline: true,\n        color: \"info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Log In\"))))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return LoginForm;\n}(Component);\n\nexport default LoginForm;","map":{"version":3,"sources":["U:\\ANDY PUJOL\\NUIWebReact\\client\\src\\Forms\\login.js"],"names":["React","Component","AvForm","AvGroup","AvInput","AvFeedback","Container","Row","Col","Button","Label","Jumbotron","Modal","ModalBody","FontAwesomeIcon","faEye","faEyeSlash","axios","Redirect","LoginForm","props","usernameChange","event","persist","setState","username","target","value","console","log","state","passwordChange","password","handleSubmit","admin","post","then","res","data","loginSuccess","modal","toggle","className","passwordVisible","toggleVisiblePassword","bind","icon","input_type","size","offset","validateFormAndSubmit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './login.css';\r\nimport { AvForm, AvGroup, AvInput, AvFeedback } from 'availity-reactstrap-validation';\r\nimport { Container, Row, Col, Button, Label, Jumbotron, Modal, ModalBody } from 'reactstrap';\r\nimport FontAwesomeIcon from '@fortawesome/react-fontawesome'\r\nimport { faEye, faEyeSlash} from '@fortawesome/fontawesome-free-solid';\r\nimport axios from 'axios';\r\nimport Redirect from 'react-router-dom';\r\n\r\nclass LoginForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            passwordVisible: false,\r\n            username: \"\",\r\n            password: \"\",\r\n            modal: false\r\n        }\r\n        this.toggleVisiblePassword = this.toggleVisiblePassword.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n      }\r\n\r\n    toggleVisiblePassword(){\r\n            this.setState({ passwordVisible: !this.state.passwordVisible});\r\n      }\r\n\r\n    usernameChange = event =>{\r\n        event.persist();\r\n        this.setState({ username: event.target.value });\r\n        console.log(this.state.username);\r\n      }\r\n\r\n    passwordChange = event =>{\r\n        event.persist();\r\n        this.setState({ password: event.target.value });\r\n        console.log(this.state.password);\r\n    }\r\n\r\n    \r\n    toggle(){\r\n        this.setState({\r\n            modal: !this.state.modal\r\n          });\r\n    }\r\n\r\n\r\n    handleSubmit = event => {\r\n        event.persist();\r\n\r\n        const admin = {\r\n            username: this.state.username,\r\n            password: this.state.password\r\n        }\r\n\r\n        axios.post(`/api/login`, { admin })\r\n        .then(res => {\r\n            if(res.data.loginSuccess === true){\r\n                return( <Redirect to='/' />)\r\n            }\r\n            else{\r\n                return(\r\n                    <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\r\n                        <ModalHeader toggle={this.toggle}>Modal title</ModalHeader>\r\n                        <ModalBody>\r\n                            Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button color=\"primary\" onClick={this.toggle}>Do Something</Button>{' '}\r\n                            <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n                )\r\n            }\r\n        })\r\n      }\r\n\r\n    render() {\r\n        let icon = this.state.passwordVisible ? faEyeSlash : faEye;\r\n        let input_type = this.state.passwordVisible ? \"text\" : \"password\";\r\n        return (\r\n            <div>\r\n                <Container>\r\n                    <Row><br /><br /></Row>\r\n                    <Row>\r\n                        <Col md={{size: 6, offset: 3}}>\r\n                            <h2>Administrator Log In</h2>\r\n                            <br />\r\n                        </Col>\r\n                    </Row>\r\n                     <Row>\r\n                         <Col sm=\"6\">\r\n                            <h1>Note:</h1>\r\n                            <p className=\"login-note\">THIS PAGE IS ONLY FOR ADMINISTRATORS, IT IS NOT FOR COMMON USERS. IF YOU HAVE AN ADMINISTRATOR ACCOUNT\r\n                               PLEASE USE THE FORM NEXT TO THIS TEXT TO LOG IN WITH YOUR GIVEN CREDENTIALS. OTHERWISE, GO AWAY!\r\n                            </p>\r\n                         </Col>\r\n                         <Col>\r\n                            <Jumbotron>\r\n                                <AvForm onSubmit={this.validateFormAndSubmit}>\r\n                                    <Row>\r\n                                        <Col sm=\"10\">\r\n                                            <AvGroup>\r\n                                                <Label className=\"form-label\" for=\"Email\">Email</Label>\r\n                                                <AvInput type=\"email\" name=\"email\" id=\"LoginFormEmail\" placeholder=\"Type your Email Here\" onChange={this.usernameChange} required />\r\n                                                <AvFeedback className=\"av-feedback\">This Field is Required!</AvFeedback>\r\n                                            </AvGroup>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col sm=\"10\">\r\n                                            <AvGroup>\r\n                                                <Label className=\"form-label\" for=\"Password\">Password</Label>\r\n                                                <AvInput type={input_type} name=\"password\" id=\"LoginFormPassword\" placeholder=\"Type your Password Here\"  onChange={this.passwordChange} required />\r\n                                                <AvFeedback className=\"av-feedback\">This Field is Required!</AvFeedback>\r\n                                            </AvGroup>\r\n                                        </Col> \r\n                                        <Col md={{offset: -2}}>\r\n                                            <br />\r\n                                            <Button outline onClick={this.toggleVisiblePassword}><FontAwesomeIcon icon={icon} /></Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Button outline color=\"info\">Log In</Button>\r\n                                </AvForm>\r\n                            </Jumbotron>\r\n                         </Col> \r\n                     </Row>\r\n                     <br />\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}